/*
Copyright 2008 Sun Microsystems, Inc.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

There are special exceptions to the terms and conditions of the GPL
as it is applied to this software. View the full text of the
exception in file EXCEPTIONS-CONNECTOR-C++ in the directory of this
software distribution.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*/

INTRODUCTION

This is the best place for regression tests. This is where you should
add a test when you fix a bug in the Connector. For historical reason
there are three distinct sets of tests for the driver:

tests/CJUnitTests/ <-- ported JDBC compliance/conformance tests
tests/unit/        <-- primarily regression testing
tests/static_test* <-- unclassified API tests, don't add code any more!

The first two sets of test are using the same unit testing framework.
All new tests of any kind (compliance, conformance, regression, ...),
shall be written using the unit testing framework contained in the source
of the MySQL Connector/C++.

If you work for MySQL Support or you would like to help us with a
full-featured bug report including a test case, here is what you need to
do.


HOW TO ADD A REGRESSION TEST

1) Identify a proper group, a proper directory for your test

  If there is a suitable directory for adding a new test proceed
  with step 2)!

  If there is no suitable directory, you need to create one by copying
  the directory template_bug_group/. For example, use:

   [# cd test/unit/ - this is where this README is :-)]
    # cp -R template_bug_group/ mygroup/

  Go to the newly create directory mygroup/. It should reside in
  test/unit. The directory mygroup/ contains a CMake build
  file (a) and two *.cpp and two *.h files (b, c):

    a) A CMakeLists.txt build file
    b) bug123.cpp + bug123.h -> compiled into binary bug123
    c) bug456.cpp + bug456.h -> compiled into binary bug456

  A pair of one *.cpp and the corresponding *.h file (b, c) holds 
  the code for one bug test and is compiled into one binary. 

  Modify the template code as needed. Make sure you keep the
  CMakeLists.txt (a) in sync with the code in the directory. Have a look,
  its Cut&Paste and Search&Replace that needs to be done.

  In order to build the test whenever the driver is build, you must
  "register" the new directory at the CMakeLists.txt found in the parent 
  directory of your newly create mygroup/ directory.

  Open the CMakeLists.txt file from test/unit/). At its end you will find:
